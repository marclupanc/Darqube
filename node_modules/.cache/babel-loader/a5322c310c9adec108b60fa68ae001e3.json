{"ast":null,"code":"var _jsxFileName = \"/Users/maraclupanciuc/Desktop/DarqubeReactTest/Darqube/src/Pages/News/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchNewsBegin } from \"../../redux/News/actions\";\nimport { getAllNews, getPaginatedNews } from \"../../redux/News/selectors\";\nimport LatestItem from \"../../Components/LatestItem\";\nimport PostItem from \"../../Components/PostItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst News = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const news = useSelector(getPaginatedNews);\n  const allNews = useSelector(getAllNews);\n  const [newState, setNewState] = useState();\n  console.log(newState);\n  console.log(allNews);\n  useEffect(() => {\n    dispatch(fetchNewsBegin());\n  }, []); // PAGINATION\n  // function Items({ currentItems }) {\n  //   return (\n  //     <>\n  //       {currentItems &&\n  //         currentItems.map((item) => (\n  //           <div>\n  //             <h3>Item #{item}</h3>\n  //           </div>\n  //         ))}\n  //     </>\n  //   );\n  // }\n  // function PaginatedItems({ itemsPerPage }) {\n  //   // We start with an empty list of items.\n  //   const [currentItems, setCurrentItems] = useState(null);\n  //   const [pageCount, setPageCount] = useState(0);\n  //   // Here we use item offsets; we could also use page offsets\n  //   // following the API or data you're working with.\n  //   const [itemOffset, setItemOffset] = useState(0);\n  // useEffect(() => {\n  //   // Fetch items from another resources.\n  //   const endOffset = itemOffset + itemsPerPage;\n  //   console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  //   setCurrentItems(items.slice(itemOffset, endOffset));\n  //   setPageCount(Math.ceil(items.length / itemsPerPage));\n  // }, [itemOffset, itemsPerPage]);\n  // // Invoke when user click to request another page.\n  // const handlePageClick = (event) => {\n  //   const newOffset = (event.selected * itemsPerPage) % items.length;\n  //   console.log(\n  //     `User requested page number ${event.selected}, which is offset ${newOffset}`\n  //   );\n  //   setItemOffset(newOffset);\n  // };\n  // PAGINATION-END\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-4 col-lg-6 col-md-6 pb-4\",\n        children: /*#__PURE__*/_jsxDEV(LatestItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-8 col-lg-6 col-md-6 \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row  phones\",\n          children: [news.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-4 col-lg-6 col-md-10 col-sm-6 pb-4\",\n            children: /*#__PURE__*/_jsxDEV(PostItem, {\n              postData: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-navigation\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pages\",\n                children: \"1-6 out of 24\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pages-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"previous\",\n                  children: \"Previous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"next\",\n                  children: \"Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(News, \"3LHhCEIQjlTDeP6wG+ka33n6hyE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = News;\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchNewsBegin","getAllNews","getPaginatedNews","LatestItem","PostItem","News","dispatch","news","allNews","newState","setNewState","console","log","map","data","index"],"sources":["/Users/maraclupanciuc/Desktop/DarqubeReactTest/Darqube/src/Pages/News/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchNewsBegin } from \"../../redux/News/actions\";\nimport { getAllNews, getPaginatedNews } from \"../../redux/News/selectors\";\nimport LatestItem from \"../../Components/LatestItem\";\nimport PostItem from \"../../Components/PostItem\";\n\nconst News = () => {\n  const dispatch = useDispatch();\n  const news = useSelector(getPaginatedNews);\n  const allNews = useSelector(getAllNews);\n  const [newState, setNewState] = useState();\n  console.log(newState);\n  console.log(allNews);\n\n  useEffect(() => {\n    dispatch(fetchNewsBegin());\n  }, []);\n\n  // PAGINATION\n\n  // function Items({ currentItems }) {\n  //   return (\n  //     <>\n  //       {currentItems &&\n  //         currentItems.map((item) => (\n  //           <div>\n  //             <h3>Item #{item}</h3>\n  //           </div>\n  //         ))}\n  //     </>\n  //   );\n  // }\n\n  // function PaginatedItems({ itemsPerPage }) {\n  //   // We start with an empty list of items.\n  //   const [currentItems, setCurrentItems] = useState(null);\n  //   const [pageCount, setPageCount] = useState(0);\n  //   // Here we use item offsets; we could also use page offsets\n  //   // following the API or data you're working with.\n  //   const [itemOffset, setItemOffset] = useState(0);\n\n  // useEffect(() => {\n  //   // Fetch items from another resources.\n  //   const endOffset = itemOffset + itemsPerPage;\n  //   console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n  //   setCurrentItems(items.slice(itemOffset, endOffset));\n  //   setPageCount(Math.ceil(items.length / itemsPerPage));\n  // }, [itemOffset, itemsPerPage]);\n\n  // // Invoke when user click to request another page.\n  // const handlePageClick = (event) => {\n  //   const newOffset = (event.selected * itemsPerPage) % items.length;\n  //   console.log(\n  //     `User requested page number ${event.selected}, which is offset ${newOffset}`\n  //   );\n  //   setItemOffset(newOffset);\n  // };\n  // PAGINATION-END\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-xl-4 col-lg-6 col-md-6 pb-4\">{<LatestItem />}</div>\n        <div className=\"col-xl-8 col-lg-6 col-md-6 \">\n          <div className=\"row  phones\">\n            {news.map((data, index) => (\n              <div\n                key={index}\n                className=\"col-xl-4 col-lg-6 col-md-10 col-sm-6 pb-4\"\n              >\n                <PostItem postData={data} />\n              </div>\n            ))}\n            <div>\n              <div className=\"page-navigation\">\n                <div className=\"pages\">1-6 out of 24</div>\n                <div className=\"pages-btn\">\n                  <button className=\"previous\">Previous</button>\n                  <button className=\"next\">Next</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default News;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,4BAA7C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,IAAI,GAAGR,WAAW,CAACG,gBAAD,CAAxB;EACA,MAAMM,OAAO,GAAGT,WAAW,CAACE,UAAD,CAA3B;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,EAAxC;EACAc,OAAO,CAACC,GAAR,CAAYH,QAAZ;EACAE,OAAO,CAACC,GAAR,CAAYJ,OAAZ;EAEAZ,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACN,cAAc,EAAf,CAAR;EACD,CAFQ,EAEN,EAFM,CAAT,CARiB,CAYjB;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAK,SAAS,EAAC,iCAAf;QAAA,uBAAkD,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA;MAAlD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,6BAAf;QAAA,uBACE;UAAK,SAAS,EAAC,aAAf;UAAA,WACGO,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,kBACR;YAEE,SAAS,EAAC,2CAFZ;YAAA,uBAIE,QAAC,QAAD;cAAU,QAAQ,EAAED;YAApB;cAAA;cAAA;cAAA;YAAA;UAJF,GACOC,KADP;YAAA;YAAA;YAAA;UAAA,QADD,CADH,eASE;YAAA,uBACE;cAAK,SAAS,EAAC,iBAAf;cAAA,wBACE;gBAAK,SAAS,EAAC,OAAf;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAK,SAAS,EAAC,WAAf;gBAAA,wBACE;kBAAQ,SAAS,EAAC,UAAlB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADF,eAEE;kBAAQ,SAAS,EAAC,MAAlB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QATF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD,CAhFD;;GAAMV,I;UACaP,W,EACJC,W,EACGA,W;;;KAHZM,I;AAkFN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}