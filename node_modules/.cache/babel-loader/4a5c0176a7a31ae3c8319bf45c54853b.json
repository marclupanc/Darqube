{"ast":null,"code":"// allNews: fetch('https://finnhub.io/api/v1/company-news?symbol=AAPL&from=2021-03-01&to=2021-03-15&token=bpjsf67rh5r9328ecgvg')\nimport { FETCH_NEWS_BEGIN, FETCH_NEWS_SUCCESS, FETCH_NEWS_FAILURE } from './news.actions';\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null\n};\nexport default function productReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_PRODUCTS_BEGIN:\n      // Mark the state as \"loading\" so we can show a spinner or something\n      // Also, reset any errors. We're starting fresh.\n      return { ...state,\n        loading: true,\n        error: null\n      };\n\n    case FETCH_PRODUCTS_SUCCESS:\n      // All done: set loading \"false\".\n      // Also, replace the items with the ones from the server\n      return { ...state,\n        loading: false,\n        items: action.payload.products\n      };\n\n    case FETCH_PRODUCTS_FAILURE:\n      // The request failed. It's done. So set loading to \"false\".\n      // Save the error, so we can display it somewhere.\n      // Since it failed, we don't have items to display anymore, so set `items` empty.\n      //\n      // This is all up to you and your app though:\n      // maybe you want to keep the items around!\n      // Do whatever seems right for your use case.\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        items: []\n      };\n\n    default:\n      // ALWAYS have a default case in a reducer\n      return state;\n  }\n}","map":{"version":3,"names":["FETCH_NEWS_BEGIN","FETCH_NEWS_SUCCESS","FETCH_NEWS_FAILURE","initialState","items","loading","error","productReducer","state","action","type","FETCH_PRODUCTS_BEGIN","FETCH_PRODUCTS_SUCCESS","payload","products","FETCH_PRODUCTS_FAILURE"],"sources":["/Users/maraclupanciuc/Desktop/DarqubeReactTest/Darqube/src/redux/News/news.reducer.jsx"],"sourcesContent":["\n        // allNews: fetch('https://finnhub.io/api/v1/company-news?symbol=AAPL&from=2021-03-01&to=2021-03-15&token=bpjsf67rh5r9328ecgvg')\n\n\nimport {\n  FETCH_NEWS_BEGIN,\n  FETCH_NEWS_SUCCESS,\n  FETCH_NEWS_FAILURE\n} from './news.actions';\n\nconst initialState = {\n  items: [],\n  loading: false,\n  error: null\n};\n\nexport default function productReducer(state = initialState, action) {\n  switch(action.type) {\n    case FETCH_PRODUCTS_BEGIN:\n      // Mark the state as \"loading\" so we can show a spinner or something\n      // Also, reset any errors. We're starting fresh.\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n\n    case FETCH_PRODUCTS_SUCCESS:\n      // All done: set loading \"false\".\n      // Also, replace the items with the ones from the server\n      return {\n        ...state,\n        loading: false,\n        items: action.payload.products\n      };\n\n    case FETCH_PRODUCTS_FAILURE:\n      // The request failed. It's done. So set loading to \"false\".\n      // Save the error, so we can display it somewhere.\n      // Since it failed, we don't have items to display anymore, so set `items` empty.\n      //\n      // This is all up to you and your app though:\n      // maybe you want to keep the items around!\n      // Do whatever seems right for your use case.\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        items: []\n      };\n\n    default:\n      // ALWAYS have a default case in a reducer\n      return state;\n  }\n}"],"mappings":"AACQ;AAGR,SACEA,gBADF,EAEEC,kBAFF,EAGEC,kBAHF,QAIO,gBAJP;AAMA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,OAAO,EAAE,KAFU;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAMA,eAAe,SAASC,cAAT,GAAsD;EAAA,IAA9BC,KAA8B,uEAAtBL,YAAsB;EAAA,IAARM,MAAQ;;EACnE,QAAOA,MAAM,CAACC,IAAd;IACE,KAAKC,oBAAL;MACE;MACA;MACA,OAAO,EACL,GAAGH,KADE;QAELH,OAAO,EAAE,IAFJ;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAMF,KAAKM,sBAAL;MACE;MACA;MACA,OAAO,EACL,GAAGJ,KADE;QAELH,OAAO,EAAE,KAFJ;QAGLD,KAAK,EAAEK,MAAM,CAACI,OAAP,CAAeC;MAHjB,CAAP;;IAMF,KAAKC,sBAAL;MACE;MACA;MACA;MACA;MACA;MACA;MACA;MACA,OAAO,EACL,GAAGP,KADE;QAELH,OAAO,EAAE,KAFJ;QAGLC,KAAK,EAAEG,MAAM,CAACI,OAAP,CAAeP,KAHjB;QAILF,KAAK,EAAE;MAJF,CAAP;;IAOF;MACE;MACA,OAAOI,KAAP;EApCJ;AAsCD"},"metadata":{},"sourceType":"module"}